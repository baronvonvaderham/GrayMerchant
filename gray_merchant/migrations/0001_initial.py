# Generated by Django 2.2 on 2019-07-29 02:59

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import gray_merchant.utils
import localflavor.us.models
import phonenumber_field.modelfields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email')),
                ('first_name', models.CharField(max_length=64, verbose_name='first name')),
                ('last_name', models.CharField(max_length=64, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Vendor',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=128, unique=True, verbose_name='name')),
                ('email', models.EmailField(db_index=True, max_length=254, verbose_name='email')),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None, verbose_name='phone')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
            ],
            options={
                'verbose_name': 'vendor',
                'verbose_name_plural': 'vendors',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='profile', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('dob', models.DateField(verbose_name='date of birth')),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None, verbose_name='phone number')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='profile_images', verbose_name='photo')),
            ],
            options={
                'verbose_name': 'profile',
                'verbose_name_plural': 'profiles',
            },
        ),
        migrations.CreateModel(
            name='VendorAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=128, verbose_name='name')),
                ('address_line_1', models.CharField(max_length=128, verbose_name='address line 1')),
                ('address_line_2', models.CharField(blank=True, max_length=128, null=True, verbose_name='address line 2')),
                ('address_line_3', models.CharField(blank=True, max_length=128, null=True, verbose_name='address line 3')),
                ('city', models.CharField(max_length=128, verbose_name='city')),
                ('state', localflavor.us.models.USStateField(max_length=2, verbose_name='state')),
                ('zip_code', models.CharField(max_length=5, validators=[gray_merchant.utils.ZipCodeValidator], verbose_name='zip code')),
                ('vendor', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='address', to='gray_merchant.Vendor')),
            ],
            options={
                'verbose_name': 'address',
                'verbose_name_plural': 'addresses',
            },
        ),
        migrations.CreateModel(
            name='UserAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address_line_1', models.CharField(max_length=128, verbose_name='address line 1')),
                ('address_line_2', models.CharField(blank=True, max_length=128, null=True, verbose_name='address line 2')),
                ('address_line_3', models.CharField(blank=True, max_length=128, null=True, verbose_name='address line 3')),
                ('city', models.CharField(max_length=128, verbose_name='city')),
                ('state', localflavor.us.models.USStateField(max_length=2, verbose_name='state')),
                ('zip_code', models.CharField(max_length=5, validators=[gray_merchant.utils.ZipCodeValidator], verbose_name='zip code')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='address', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'address',
                'verbose_name_plural': 'addresses',
            },
        ),
        migrations.CreateModel(
            name='Owner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owners', related_query_name='owner', to='gray_merchant.Vendor')),
                ('profile', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='gray_merchant.UserProfile')),
            ],
            options={
                'verbose_name': 'owner',
                'verbose_name_plural': 'owners',
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employees', related_query_name='employee', to='gray_merchant.Vendor')),
                ('profile', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='gray_merchant.UserProfile')),
            ],
            options={
                'verbose_name': 'employee',
                'verbose_name_plural': 'employees',
            },
        ),
    ]
