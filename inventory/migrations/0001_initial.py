# Generated by Django 2.2 on 2019-07-29 02:59

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('card_catalog', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='GradingDetails',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, unique=True)),
                ('grading_service', models.CharField(choices=[('BGS', 'Beckett Grading Services'), ('BAS', 'Beckett Authentication Services'), ('PSA', 'Professional Sports Authentication')], max_length=32)),
                ('serial_number', models.CharField(max_length=12)),
                ('overall_grade', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True)),
                ('autograph_grade', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True)),
                ('centering_grade', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True)),
                ('corners_grade', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True)),
                ('edges_grade', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True)),
                ('surfaces_grade', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True)),
            ],
            options={
                'verbose_name': 'grading_details',
            },
        ),
        migrations.CreateModel(
            name='InventoryItem',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(blank=True, max_length=256)),
                ('description', models.TextField()),
                ('condition', models.CharField(choices=[('M', 'Mint'), ('NM', 'Near Mint'), ('LP', 'Lightly Played'), ('MP', 'Moderately Played'), ('HP', 'Heavily Played'), ('DMG', 'Damaged')], help_text='Card condition', max_length=3)),
                ('is_foil', models.BooleanField(default=False, help_text='Is the card foil?')),
                ('list_price_override', models.FloatField(blank=True, help_text='Manually set list price to override automatic value from TCGPlayer data', null=True)),
                ('buylist_price_override', models.FloatField(blank=True, help_text='Manually set buylist price to override automatic value from TCGPlayer data', null=True)),
                ('active', models.BooleanField(default=True)),
                ('card', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='card_catalog.Card')),
                ('grading_details', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='inventory.GradingDetails')),
            ],
            options={
                'verbose_name': 'inventory_item',
                'verbose_name_plural': 'inventory_items',
            },
        ),
    ]
